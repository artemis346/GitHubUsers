plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
android androidConfiguration

def useReleaseKeystore = rootProject.file("release.properties").exists() && rootProject.file("release.jks").exists()

android {
    buildFeatures {
        compose true
    }

    kotlinOptions {
        jvmTarget = jvmTargetVersion
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }

    defaultConfig {
        applicationId "com.github.user"
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug
        release
    }

    if (useReleaseKeystore) {
        project.ext.props = new Properties()
        props.load(new FileInputStream(rootProject.file('release.properties')))
        android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
        android.signingConfigs.release.keyAlias props.keyAlias
        android.signingConfigs.release.storePassword props.keyStorePassword
        android.signingConfigs.release.keyPassword props.keyAliasPassword
    }

    buildTypes {
        debug {
            minifyEnabled false
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
        }
    }
}

dependencies {
    implementation project(path: ':network')
    implementation project(path: ':repository')
    implementation project(path: ':repository-impl')
    implementation project(path: ':uikit')
    implementation project(path: ':navigation')
    implementation project(path: ':features:searchusers')
    implementation project(path: ':features:userdetails')
    implementation project(path: ':features:searchusers-api')
    implementation project(path: ':features:userdetails-api')
}

dependencies {
    kapt diLibs.hiltCompiler
    implementation diLibs.hilt
    implementation uiLibs.values()
    implementation coreLibs.values()
    implementation navigation.values()
}